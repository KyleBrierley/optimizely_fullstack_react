'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Buttons come in a wide array of styles and allow the user to perform an
 * action.
 * @param {Object} props - Properties passed to component
 * @returns {ReactElement}
 */
var Button = function Button(props) {
  var buttonStyleClass = props.style ? 'oui-button--' + props.style : '';
  var buttonSizeClass = props.size ? 'oui-button--' + props.size : '';

  return _react2.default.createElement(
    'button',
    {
      className: 'oui-button ' + buttonStyleClass + ' ' + buttonSizeClass,
      disabled: props.isDisabled ? 'disabled' : false,
      type: props.isSubmit ? 'submit' : 'button',
      onClick: props.onClick,
      'data-test-section': props.testSection,
      'aria-label': props.ariaLabel },
    props.children
  );
};

Button.propTypes = {
  /** Describes buttons that have an icon but no text */
  ariaLabel: _react2.default.PropTypes.string,
  /** Text within the button */
  children: _react2.default.PropTypes.string.isRequired,
  /** Prevent users from interacting with the button */
  isDisabled: _react2.default.PropTypes.bool,
  /** Make the button act as a submit button */
  isSubmit: _react2.default.PropTypes.bool,
  /** Function that fires when the button is clicked on */
  onClick: _react2.default.PropTypes.func,
  /** Various height and width options */
  size: _react2.default.PropTypes.oneOf(['tiny', 'small', 'large', 'narrow', 'tight', 'full']),
  /** Various color options */
  style: _react2.default.PropTypes.oneOf(['highlight', 'danger', 'outline', 'outline-reverse', 'plain', 'toggle']),
  /** Hook for automated JavaScript tests */
  testSection: _react2.default.PropTypes.string
};

exports.default = Button;