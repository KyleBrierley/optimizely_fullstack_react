'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cellClasses = function cellClasses(index, collapsedColumns, numberedColumns) {
  var classes = [];

  if (collapsedColumns && collapsedColumns.indexOf(index) !== -1) {
    classes.push('oui-cell-collapse');
  }

  if (numberedColumns && numberedColumns.indexOf(index) !== -1) {
    classes.push('oui-numerical');
  }

  return classes.join(' ');
};

var TableHead = function TableHead(headings, collapsedColumns, numberedColumns) {
  if (!headings) {
    return;
  }

  return _react2.default.createElement(
    'thead',
    null,
    _react2.default.createElement(
      'tr',
      null,
      headings.map(function (heading, i) {
        var classes = cellClasses(i, collapsedColumns, numberedColumns);

        return _react2.default.createElement(
          'th',
          {
            key: i,
            className: classes },
          heading
        );
      })
    )
  );
};

var TableBody = function TableBody(rows, collapsedColumns, numberedColumns) {
  return _react2.default.createElement(
    'tbody',
    null,
    rows.map(function (row, i) {
      return _react2.default.createElement(
        'tr',
        { key: i },
        row.map(function (item, j) {
          var classes = cellClasses(j, collapsedColumns, numberedColumns);

          return _react2.default.createElement(
            'td',
            {
              className: classes,
              key: j },
            item
          );
        })
      );
    })
  );
};

/**
 *
 * @param {Object} props - Properties passed to component
 * @returns {ReactElement}
 */
var Table = function Table(props) {
  var styleClass = props.style ? 'oui-table--' + props.style : '';

  return _react2.default.createElement(
    'table',
    {
      className: 'oui-table ' + styleClass,
      'data-test-section': props.testSection },
    TableHead(props.headings, props.collapsedColumns, props.numberedColumns),
    TableBody(props.data, props.collapsedColumns, props.numberedColumns)
  );
};

Table.propTypes = {
  /** Array of the column numbers, starting at 0, that should be collapsed */
  collapsedColumns: _react2.default.PropTypes.array,
  /** Array of data that appears within the table */
  data: _react2.default.PropTypes.array.isRequired,
  /** Headings for the `th` */
  headings: _react2.default.PropTypes.array,
  /**
   * Array of the column numbers, starting at 0, that should be right-aligned
   */
  numberedColumns: _react2.default.PropTypes.array,
  /** Available border and hover options */
  style: _react2.default.PropTypes.oneOf(['wall', 'rule']),
  /** Hook for automated JavaScript tests */
  testSection: _react2.default.PropTypes.string
};

exports.default = Table;