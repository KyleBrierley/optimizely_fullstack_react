'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Generates an `input` element (optionally wrapped in a label) and accepts
 * most of the common input types.
 * @param {Object} props - Properties passed to component
 * @returns {ReactElement}
 */
var Input = function Input(props) {
  var renderInput = function renderInput(opts) {
    return _react2.default.createElement('input', {
      className: 'oui-text-input',
      type: opts.type,
      value: opts.value,
      defaultValue: opts.defaultValue,
      placeholder: opts.placeholder,
      required: opts.isRequired,
      readOnly: opts.isReadOnly,
      disabled: opts.isDisabled,
      onInput: opts.onInput,
      onChange: opts.onChange,
      'data-test-section': opts.testSection
    });
  };

  if (props.label) {
    return _react2.default.createElement(
      _Label2.default,
      { testSection: props.testSection + '-label' },
      _react2.default.createElement(
        'div',
        { className: 'label' },
        props.label
      ),
      renderInput(props)
    );
  }

  return renderInput(props);
};

Input.propTypes = {
  /** The default value of the input used on initial render */
  defaultValue: _react2.default.PropTypes.string,
  /** Prevents input from being modified and appears disabled */
  isDisabled: _react2.default.PropTypes.bool,
  /** Prevents input from being modified but doesn't appear disabled */
  isReadOnly: _react2.default.PropTypes.bool,
  /** Prevents input from being submitted without value */
  isRequired: _react2.default.PropTypes.bool,
  /** Text that describes the input */
  label: _react2.default.PropTypes.string,
  /** Function that fires when the loses focus after the value changes */
  onChange: _react2.default.PropTypes.func,
  /** Function that fires when the value of the input changes */
  onInput: _react2.default.PropTypes.func,
  /** Input placeholder text */
  placeholder: _react2.default.PropTypes.string,
  /** Hook for automated JavaScript tests */
  testSection: _react2.default.PropTypes.string,
  /** Supported input types */
  type: _react2.default.PropTypes.oneOf(['text', 'password', 'date', 'number', 'email', 'url', 'search', 'tel']).isRequired,
  /** Text within the input */
  value: _react2.default.PropTypes.string
};

exports.default = Input;